type Signup {
  "Email of the signed up user"
  email: String! @unique(index: "unique_email")
  "Used to indicate if this signup was sent a Golden Ticket for the alpha"
  sentGoldenTicket: Boolean
}

type LinePositionObject @embedded {
  hasGoldenTicket: Boolean!
  position: Int!
  total: Int!
}

type Query {
  allSignups: [Signup!] @index(name: "all_signups")
  allSignupsBySentGoldenTicketFlag(sentGoldenTicket: Boolean!): [Signup!]
    @index(name: "all_signups_by_sentGoldenTicket_flag")

  findSignupByEmail(email: String!): Signup!
    @index(name: "find_signup_by_email")

  "Returns the position of the email in the signups which haven't been sent invites, as well as the total of the signups remaining, additionally returns if the entered email has been sent a golden ticket yet"
  findPlaceInLine(email: String!): LinePositionObject!
    @resolver(name: "find_place_in_line")

  "Returns the current number of signups which haven't been sent invites"
  getWaitlistTotal: Int! @resolver(name: "get_waitlist_total")
}
